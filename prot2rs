#!/bin/bash
SCRIPTDIR="$(dirname "$0")"
CONF_FILE="${SCRIPTDIR}/pbpro.conf"

_maketemp(){
    mktemp -q "/tmp/$(basename "${0}").XXXXXX"
    if [ "${?}" -ne 0 ]; then
        echo "${0}: Can't create temp file, exiting..."
        _writeerrorlog "_maketemp" "was unable to create the temp file, so the script had to exit."
        exit 1
    fi
}

if [ ! -f "${CONF_FILE}" ] ; then
    echo "A configuration file is needed."
    echo "Please edit ${CONF_FILE}"
    echo "PROTRACK_DB_URL=" > "${CONF_FILE}"
    echo "PROTRACK_DB_USER=" >> "${CONF_FILE}"
    echo "RESOURCESPACE_DB_HOST=" >> "${CONF_FILE}"
    echo "RESOURCESPACE_DB_NAME=" >> "${CONF_FILE}"
    echo "RESOURCESPACE_DB_USER=" >> "${CONF_FILE}"
    echo "RESOURCESPACE_DB_PW=" >> "${CONF_FILE}"
    exit 1
fi

. "${CONF_FILE}" || { echo "Missing ${CONF_FILE}. Exiting." ; exit 1 ;};

OPTIND=1
while getopts ":f:" OPT ; do
    case "${OPT}" in
        f) FROM_DATE="${OPTARG}";;
        *) echo "bad option -${OPTARG}" ; _usage ;;
        :) echo "Option -${OPTARG} requires an argument" ; _writeerrorlog "makeyoutube" "The option selected required an argument and none was provided. The script had to exit." ; exit 1 ;;
    esac
done
shift $(( ${OPTIND} - 1 ))

TEMPXML=$(_maketemp)
TEMPPBCORE=$(_maketemp)

_query_protrack_push_to_resourcespace(){
    MEDIAID="${1}"
    echo -n "Working on ${MEDIAID}"
    RESULTS="$(mysql -BNr -h "${RESOURCESPACE_DB_HOST}" -u "${RESOURCESPACE_DB_USER}" -p"${RESOURCESPACE_DB_PW}" -D "${RESOURCESPACE_DB_NAME}" -e "SELECT COUNT(ref) FROM resource WHERE archive != '3' and field8='${MEDIAID}' ;" 2> /dev/null)"
    echo -n ", found ${RESULTS} record(s) in resourcespace"
    if [ "${RESULTS}" = 0 ] ; then
        echo ", skipping"
    else
    "${SCRIPTDIR}/pbprotracktor" "${MEDIAID}" > "${TEMPXML}"
    xml val "${TEMPXML}" >/dev/null
    if [ "${?}" != "0" ] ; then
        echo "pbprotracktor did not return a result for ${MEDIAID}, skipping."
        continue
    fi
    SERIESTITLE=$(xml sel -N p="http://www.pbcore.org/PBCore/PBCoreNamespace.html" -t -v "//p:pbcoreDescriptionDocument[1]/p:pbcoreTitle[@titleType='Series'][1]" "${TEMPXML}")
    if [ -n "${SERIESTITLE}" ] ; then
        COLLECTION_ID=$(mysql -BNr -h "${RESOURCESPACE_DB_HOST}" -u "${RESOURCESPACE_DB_USER}" -p"${RESOURCESPACE_DB_PW}" -D "${RESOURCESPACE_DB_NAME}" -e "SELECT ref FROM collection WHERE name = '$(printf "%q" "${SERIESTITLE}")' LIMIT 1 ;")
    fi
    if [[ -z "${COLLECTION_ID}" ]] ; then
        mysql -h "${RESOURCESPACE_DB_HOST}" -u "${RESOURCESPACE_DB_USER}" -p"${RESOURCESPACE_DB_PW}" -D "${RESOURCESPACE_DB_NAME}" -e "INSERT INTO collection  (name,public,theme,created,user,allow_changes) VALUES('$(printf "%q" "${SERIESTITLE}")',1,'Series',now(),3,1)" ;
        COLLECTION_ID=$(mysql -BNr -h "${RESOURCESPACE_DB_HOST}" -u "${RESOURCESPACE_DB_USER}" -p"${RESOURCESPACE_DB_PW}" -D "${RESOURCESPACE_DB_NAME}" -e "SELECT ref FROM collection WHERE name = '$(printf "%q" "${SERIESTITLE}")' LIMIT 1 ;")
    fi
    xsltproc --nonet --stringparam id "${MEDIAID}" --stringparam collectionid "${COLLECTION_ID}" "${SCRIPTDIR}/pbcore2resourcespace.xsl" "${TEMPXML}" > "${TEMPPBCORE}"
    if [ -s "${TEMPXML}" ] ; then
        curl --data-urlencode "xml@${TEMPPBCORE}" http://respace.cunytv.lan/plugins/remoteimport/pages/update_unsafe.php
        echo
    else
        echo "Metadata about $MEDIAID is unavailable."
    fi
    if [ -f "${TEMPXML}" ] ;then
        rm "${TEMPXML}"
    fi
    fi
}

if [[ -n "${FROM_DATE}" ]] ; then
    psql -Ath "$PROTRACK_DB_URL" -U "$PROTRACK_DB_USER" -P pager=off -d protrack -c "SELECT fi_video_src FROM filler AS f LEFT JOIN notes AS n ON n.no_parent = f.fi_serial WHERE f.up_date BETWEEN '${FROM_DATE}' AND '3000-01-01' OR n.up_date BETWEEN '${FROM_DATE}' AND '3000-01-01'" | while read MEDIAID ; do
        _query_protrack_push_to_resourcespace "${MEDIAID}"
    done
else
while [ "${*}" != "" ] ; do
    MEDIAID="${1}"
    shift
    _query_protrack_push_to_resourcespace "${MEDIAID}"
done
fi
